// wumpusutil.ncs
// Mac Radigan

import org.radigan.naomi.wumpus.impl.SimulationFunctor as F
import org.radigan.naomi.wumpus.utilities.WumpusUtil as Util
import java.util.concurrent.atomic.AtomicIntegerArray
import org.radigan.system.utilities.MatrixImpl

def f = []
// sources 01-09
f << new F('p1',  ['d1','d2','d3','d4'], [],                             ['a1','a2','a3'])
f << new F('p2',  ['d5'],                [],                             ['a1','a2','a3'])
f << new F('p3',  ['d6'],                [],                             ['a1','a2','a3'])
// functors A 11-19
f << new F('p11', ['d11'],               ['d1','d2','d3','d4'],          ['a1','a2','a3'])
f << new F('p12', ['d12'],               ['d5'],                         ['a1','a2','a3'])
f << new F('p13', ['d13'],               ['d6'],                         ['a1','a2','a3'])
// functors B 21-29
f << new F('p21', ['d21'],               ['d11'],                        ['a1','a2','a3'])
f << new F('p22', ['d22'],               ['d12'],                        ['a1','a2','a3'])
f << new F('p23', ['d23'],               ['d13'],                        ['a1','a2','a3'])
// sinks 31+
f << new F('p31', ['d31'],               ['d21'],                        ['a1','a2','a3'])

def wu = new Util(f)
println wu

println "state vector"
def sv = [
  'd1':1,
  'd2':2,
  'd3':3,
  'd4':0
  ]
//wu.execute(sv)

def tp = []
tp << Thread.start { println "a" }
tp << Thread.start { println "b" }
tp*.join()

def n = wu.getFunctorIndex('p31', 'ns1')
def fn = f[n]
def wf = wu.filter(n as int)
println wf

println "workflow:"
wf.execute()

println "\nsinks: ${wf.getSinks()}"

// *EOF*
